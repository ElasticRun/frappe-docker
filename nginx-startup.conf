user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;


events {
        # The maximum number of simultaneous connections that can be opened by
        # a worker process.
        worker_connections 1024;
}

http {
        # Includes mapping of file name extensions to MIME types of responses
        # and defines the default type.
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Name servers used to resolve names of upstream servers into addresses.
        # It's also needed when using tcpsocket and udpsocket in Lua modules.
        #resolver 208.67.222.222 208.67.220.220;

        # Don't tell nginx version to clients.
        server_tokens off;

        # Specifies the maximum accepted body size of a client request, as
        # indicated by the request header Content-Length. If the stated content
        # length is greater than this size, then the client receives the HTTP
        # error code 413. Set to 0 to disable.
        client_max_body_size 1m;

        # Timeout for keep-alive connections. Server will close connections after
        # this time.
        keepalive_timeout 65;

        # Sendfile copies data between one FD and other from within the kernel,
        # which is more efficient than read() + write().
        sendfile on;

        # Don't buffer data-sends (disable Nagle algorithm).
        # Good for sending frequent small bursts of data in real time.
        tcp_nodelay on;

        # Causes nginx to attempt to send its HTTP response head in one packet,
        # instead of using partial frames.
        #tcp_nopush on;


        # Path of the file with Diffie-Hellman parameters for EDH ciphers.
        #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

        # Specifies that our cipher suits should be preferred over client ciphers.
        ssl_prefer_server_ciphers on;

        # Enables a shared SSL cache with size that can hold around 8000 sessions.
        ssl_session_cache shared:SSL:2m;


        # Enable gzipping of responses.
        #gzip on;

        # Set the Vary HTTP header as defined in the RFC 2616.
        gzip_vary on;

        # Enable checking the existence of precompressed files.
        #gzip_static on;


        # Specifies the main log format.
        log_format main '{'
                      '"request_id": "$request_id",'
                      '"server_name": "$server_name",'
                      '"http_x_frappe_cmd": "$http_x_frappe_cmd",'
                      '"http_x_frappe_doctype": "$http_x_frappe_doctype",'
                      '"http_x_remote_addr": "$http_x_remote_addr",'
                      '"http_x_wr_server_name": "$http_x_wr_server_name",'
                      '"sent_http_x_remote_addr": "$sent_http_x_remote_addr",'
                      '"remote_addr": "$remote_addr",'
                      '"remote_user": "$remote_user",'
                      '"time_local": "$time_local",'
                      '"request": "$request",'
                      '"status": "$status",'
                      '"body_bytes_sent": $body_bytes_sent,'
                      '"http_referer": "$http_referer",'
                      '"http_user_agent": "$http_user_agent",'
                      '"http_x_forwarded_for": "$http_x_forwarded_for",'
                      '"request_time": $request_time,'
                      '"upstream_connect_time": $upstream_connect_time,'
                      '"upstream_header_time": $upstream_header_time,'
                      '"upstream_response_time": $upstream_response_time'
                      '}'
                      ;

        # Sets the path, format, and configuration for a buffered log write.
        access_log /home/frappe/docker-bench/logs/web_access.log main;

        error_log /home/frappe/docker-bench/logs/web_error.log;


        # Includes virtual hosts configs.
        include /etc/nginx/conf.d/default.conf;

        server {
                listen 8000;
                server_name site1.docker;

                root /home/frappe/docker-bench/sites;

                add_header X-Frame-Options "SAMEORIGIN";

                location /app-health {
                        access_log off;
                        return 200 "healthy\n";
                }
        }
}
